<?php

/**
 * @file
 * Pushes content from one site to another using RESTful web services.
 */

use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_help().
 */
function content_direct_help($route_name) {
  switch ($route_name) {
    case 'content_direct.help':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This is the help docs for Content Direct, see <a href="!content_direct-module">the online documentation</a></p>');
      return $output;
  }
}


/**
 * Implements hook_node_insert().
 */
function content_direct_node_insert(Node $node) {
  dpm('content_direct_node_insert fired!');
  if($node->isPublished()) {
    $pusher = \Drupal::service('content_direct.rest_content_pusher');
    $data = $pusher->getNodeData($node);
    dpm('data:');
    dpm($data);
    $pusher->request('post', 'entity/node', array('body' => $data));

    // @TODO: create new terms if they don't exist remotely.
    $terms = $pusher->getTerms($node);
    dpm(count($terms) . ' terms referenced on this node.');

    $files = $pusher->getFiles($node);
    dpm(count($files) . ' files referenced on this node.');

  }

}

/**
 * Implements hook_node_update().
 */
function content_direct_node_update(Node $node) {
  dpm('content_direct_node_update fired!');
  // @TODO: handle a node going from published to unpublished.

  $pusher = \Drupal::service('content_direct.rest_content_pusher');
  if ($pusher->remoteEntityExists('node', $node->id())) {
    $data = $pusher->getNodeData($node);
    dpm('data:');
    dpm($data);
    $pusher->request('patch', 'node/' . $node->id(), array('body' => $data));
  }
  else {
    drupal_set_message(t('Content Direct: Remote <i>node/' . $node->id() . '</i> does not exist.'), 'warning');
  }

}


/**
 * Implements hook_node_delete().
 */
function content_direct_node_delete($node) {
  // @TODO: handle a node going from published to unpublished. Should this delete or unpublish remote node?

  dpm('content_direct_node_delete fired!');
  $pusher = \Drupal::service('content_direct.rest_content_pusher');
  if ($pusher->remoteEntityExists('node', $node->id())) {
    $pusher->request('delete', 'node/' . $node->id());
  }
  else {
    drupal_set_message(t('Content Direct: Remote <i>node/' . $node->id() . '</i> does not exist.'), 'warning');
  }

}

/**
 * Implements hook_entity_update().
 *
 * Update is fired any time a new file enity is created or updated.
 */
function content_direct_file_update($file) {
  // @TODO: check if remote file exists, if so try PATCH request
  dpm('content_direct_file_update fired!');
  $pusher = \Drupal::service('content_direct.rest_content_pusher');
  $data = $pusher->getFileData($file);
//  dpm('file:');
//  dpm($data);
  if ($data) {
    $pusher->request('post', 'entity/file/', array('body' => $data));
  }

}

/**
 * Implements hook_entity_delete().
 */
function content_direct_file_delete($file) {
  // @TODO: It seems the first delete request only changes the "status" of a file on remote to temporary, and the second deletes.
  // Do I need to execute a delete twice to actually remove the file from the FS?
  dpm('content_direct_file_delete fired!');
  $pusher = \Drupal::service('content_direct.rest_content_pusher');
  $pusher->request('delete', 'file/' . $file->id());
}
